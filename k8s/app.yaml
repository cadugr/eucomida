# Deployment for the eu-comida application
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eu-comida
spec:
  replicas: 2
  selector:
    matchLabels:
      app: eu-comida-app
  template:
    metadata:
      labels:
        app: eu-comida-app
    spec:
      initContainers:
      - name: wait-for-mysql
        image: busybox:1.36
        command: ['sh', '-c', 'until nc -z -w 2 mysql-service 3306; do echo "waiting for mysql..."; sleep 2; done;']
      - name: wait-for-rabbitmq
        image: busybox:1.36
        command: ['sh', '-c', 'until nc -z -w 2 rabbitmq-service 5672; do echo "waiting for rabbitmq..."; sleep 2; done;']
      containers:
      - name: eu-comida-app
        image: # preencher com a imagem que deve ser contru√≠da e enviada para o acr na Azure.
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: k3d
        - name: SPRING_DATASOURCE_USERNAME
          value: "eucomida_user"
        - name: SPRING_DATASOURCE_PASSWORD
          value: "eucomida_pass"
        - name: SPRING_RABBITMQ_USERNAME
          value: "rabbitmq"
        - name: SPRING_RABBITMQ_PASSWORD
          value: "rabbitmq"
---
# LoadBalancer Service to expose the eu-comida application
apiVersion: v1
kind: Service
metadata:
  name: eu-comida-service
spec:
  type: LoadBalancer
  selector:
    app: eu-comida-app
  ports:
    - port: 8080
      targetPort: 8080
